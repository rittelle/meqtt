name: Run Tests and Lint
on: push

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11"]
        poetry-version: ["1.4.2"]
        # os: [ubuntu-18.04, macos-latest, windows-latest]
        os: [ubuntu-22.04]
    runs-on: ${{ matrix.os }}
    steps:

      - uses: actions/checkout@v3

      - name: Install poetry
        uses: abatilo/actions-poetry@v2.1.6
        with:
          poetry-version: ${{ matrix.poetry-version }}

      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: poetry

      - name: Install dependencies
        run: poetry install --only=main,test --no-root

      - name: Run pytest
        run: poetry run pytest tests --doctest-modules --junitxml=reports/pytest.xml --cov=meqtt --cov-report=html:reports/pytest-coverage --cov-report=lcov:reports/pytest-coverage.info

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: Test Results (Python ${{ matrix.python-version }})
          path: |
            reports/pytest.xml
            reports/pytest-coverage
            reports/pytest-coverage.info


  lint:
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11"]
        poetry-version: ["1.4.2"]
        # os: [ubuntu-18.04, macos-latest, windows-latest]
        os: [ubuntu-22.04]
    runs-on: ${{ matrix.os }}
    steps:

      - uses: actions/checkout@v3

      - name: Install poetry
        uses: abatilo/actions-poetry@v2.1.6
        with:
          poetry-version: ${{ matrix.poetry-version }}

      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: poetry

      - name: Check the pyproject.toml file for errors
        run: poetry check

      - name: Check if the poetry.lock file is consistent with pyproject.toml
        run: poetry lock --check

  publish-test-results:
    name: "Publish Tests Results"
    needs: test
    runs-on: ubuntu-22.04
    permissions:
      checks: write
      # only needed unless run with comment_mode: off
      pull-requests: write
      # only needed for private repository
      # contents: read
      # only needed for private repository
      # issues: read
    if: always()
    steps:

      - name: Download Artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2.7.0
        with:
          files: "artifacts/**/*.xml"

  publish-test-coverage:
    name: "Publish Tests Coverage"
    needs: test
    runs-on: ubuntu-22.04
    if: always()
    steps:

      - name: Download Artifacts
        uses: actions/download-artifact@v3
        with:
          # TODO: don't hardcode the Python version
          name: Test Results (Python 3.11)
          path: artifacts

      - name: Add the report to the summary
        # uses: livewing/lcov-job-summary@v1.0.0  # until #29 is fixed
        uses: rittelle/lcov-job-summary@4bf6988b2161055be609a05d1fd0b4fbeb79aec0
        with:
          lcov: artifacts/pytest-coverage.info
